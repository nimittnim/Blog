{
  "hash": "0fcb056d61cc15992522eba4712dc866",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Lagrange Interpolation\"\nauthor: Nimitt\ndate: 2023-01-15\ncategories: [Numerical Methods]\ndescription: \"Implementation of Lagrange Interpolation\"\njupyter: python3\nexecute:\n  eval: false  \n---\n\n::: {#364e34b0 .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n::: {#a233f29f .cell execution_count=2}\n``` {.python .cell-code}\ndef lagrangeInterpolation(x_array,y_array,x,n):\n    y = 0\n    for i in range(n):\n        L=1\n        for j in range(n):\n            if i!=j:\n                L *= (x - x_array[j])/(x_array[i]-x_array[j])\n        y+=(L*y_array[i])\n    return y\n\nx_array = [0,10,20,30]\ny_array = [10,35,55,52]\nx = 30\ny = lagrangeInterpolation(x_array,y_array,x,len(x_array))\nprint(y)\n```\n:::\n\n\n::: {#4f90198d .cell execution_count=3}\n``` {.python .cell-code}\n# 3/8 Simpson's rule for first four intervals\nd = 0.001\ndt = d\nt = 0\nI1 = 0\nT=[]\nc=[]\nx_array = [0,10,20,30]\ny_array = [10,35,55,52]\ny_0 = lagrangeInterpolation(x_array,y_array,t,len(x_array))\nwhile t < 30+d:\n    c_ = lagrangeInterpolation(x_array,y_array,t,len(x_array))\n    I1 += c_*dt\n    T.append(t)\n    c.append(c_)\n    t+=dt\nprint(I1)\n```\n:::\n\n\n::: {#94f8d714 .cell execution_count=4}\n``` {.python .cell-code}\n# 1/3 Simpson's rule for second two intervals\ndt = d\nt = 30\nI2 = 0\nx_array = [30,35,40]\ny_array = [52,40,37]\ny_30 = lagrangeInterpolation(x_array,y_array,t,len(x_array))\nwhile t < 40+d :\n    c_ = lagrangeInterpolation(x_array,y_array,t,len(x_array))\n    I2 += c_*dt\n    T.append(t)\n    c.append(c_)\n    t+=dt\nprint(I2)\n```\n:::\n\n\n::: {#7a719254 .cell execution_count=5}\n``` {.python .cell-code}\n# 1/3 Simpson's rule for third two intervals\ndt = d\nt = 40\nI3 = 0\nx_array = [40,45,50]\ny_array = [37,32,34]\ny_40 = lagrangeInterpolation(x_array,y_array,t,len(x_array))\nwhile t < 50+d:\n    c_ = lagrangeInterpolation(x_array,y_array,t,len(x_array))\n    I3 += c_*dt\n    T.append(t)\n    c.append(c_)\n    t+=dt\ny_50 = lagrangeInterpolation(x_array,y_array,t,len(x_array))\nprint(I3)\n```\n:::\n\n\n::: {#a7494384 .cell execution_count=6}\n``` {.python .cell-code}\nx_p = [0,30,40,50]\ny_p = [y_0,y_30,y_40,y_50]\nI_arr = [I1,I2,I3]\nfor i in range(len(x_p)-1):\n    plt.text((x_p[i] + x_p[i+1]) / 2.2, 20,f\"{I_arr[i]:.2f}\",fontsize=11)\nplt.plot(T,c)\nplt.xlabel(\"t\")\nplt.ylabel(\"c\")\nplt.title(\"c vs t\")\nfor j in range(len(x_p)):\n    plt.plot((x_p[j],x_p[j]),(0,y_p[j]),color = 'orange')\n```\n:::\n\n\n::: {#26439e8e .cell execution_count=7}\n``` {.python .cell-code}\nprint(\"Final Answer is : \",(I1+I2+I3)*4)\n```\n:::\n\n\n",
    "supporting": [
      "LagrangeInterpolation_files"
    ],
    "filters": [],
    "includes": {}
  }
}