---
title: "TDMA"
author: Nimitt
date: 2023-01-15
categories: [Numerical Methods]
description: "Implementation of TDMA"
jupyter: python3
execute:
  eval: false  
---

```{python}
#This code genrates L and U and then subctitutes to get roots
n = int(input("Enter n"))

mat=[]
for i in range(n):
    mat.append([0.0] * (n))



for j in range(n):
    row = input(f"Enter the {j + 1} th row of coefficient Matrix")
    row_arr = row.split(" ")
    for l in range(n):
        mat[j][l] = float(row_arr[l])
print("Entered Matrix : \n")
for m in range(n):
    print(mat[m])
L = []
for i in range(n):
    L.append([0.0] * (n))
for i in range(n):
    L[i][i] = 1

U = []
for i in range(n):
    U.append([0.0] * (n))

def forwardElimination(mat,L,U):
    for j in range(n):
        for k in range(j+1,n) :
            f_kj = mat[k][j]/mat[j][j]
            L[k][j] = - f_kj
            for l in range(n):
                mat[k][l]=mat[k][l] - (f_kj)*mat[j][l]
    for q in range(n):
        for p in range(n):
            U[q][p] = mat[q][p]

forwardElimination(mat,L,U)
print('\n')
print("L is : ")
for m in range(n):
    print(L[m])

print('\n')
print("U is : ")
for m in range(n):
    print(U[m])

```

